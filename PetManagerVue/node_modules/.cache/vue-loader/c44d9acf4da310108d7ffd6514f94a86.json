{"remainingRequest":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\PetManager\\src\\PetManagerVue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\PetManager\\src\\PetManagerVue\\src\\views\\Manage.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\PetManager\\src\\PetManagerVue\\src\\views\\Manage.vue","mtime":1700892552748},{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\PetManager\\src\\PetManagerVue\\node_modules\\css-loader\\dist\\cjs.js","mtime":1684135963210},{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\PetManager\\src\\PetManagerVue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1684135965929},{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\PetManager\\src\\PetManagerVue\\node_modules\\postcss-loader\\src\\index.js","mtime":1684135964779},{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\PetManager\\src\\PetManagerVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1684135964339},{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\PetManager\\src\\PetManagerVue\\node_modules\\vue-loader\\lib\\index.js","mtime":1684135964561}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5lbC1tZW51IHsKICAgIHdpZHRoOiAzMDBweDsKICB9CiAgCg=="},{"version":3,"sources":["Manage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyEA;AACA;AACA","file":"Manage.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <el-container style=\"min-height: 100vh\">\n\n    <el-aside :width=\"sideWidth + 'px'\" style=\"box-shadow: 2px 0 6px rgb(0 21 41 / 35%);\">\n      <Aside :isCollapse=\"isCollapse\" :logoTextShow=\"logoTextShow\" />\n    </el-aside>\n\n    <el-container>\n      <el-header style=\"border-bottom: 1px solid #ccc;\">\n        <Header :collapseBtnClass=\"collapseBtnClass\" @asideCollapse=\"collapse\" :user=\"user\" />\n      </el-header>\n\n      <el-main>\n<!--        表示当前页面的子路由会在 <router-view /> 里面展示-->\n        <router-view @refreshUser=\"getUser\" />\n      </el-main>\n\n    </el-container>\n  </el-container>\n</template>\n\n<script>\n\nimport Aside from \"@/components/Aside\";\nimport Header from \"@/components/Header\";\n\nexport default {\n  name: 'Home',\n  data() {\n    return {\n      collapseBtnClass: 'el-icon-s-fold',\n      isCollapse: false,\n      sideWidth: 200,\n      logoTextShow: true,\n      user: {}\n    }\n  },\n  components: {\n    Aside,\n    Header\n  },\n  created() {\n    // 从后台获取最新的User数据\n    this.getUser()\n  },\n  methods: {\n    collapse() {  // 点击收缩按钮触发\n      this.isCollapse = !this.isCollapse\n      if (this.isCollapse) {  // 收缩\n        this.sideWidth = 64\n        this.collapseBtnClass = 'el-icon-s-unfold'\n        this.logoTextShow = false\n      } else {   // 展开\n        this.sideWidth = 200\n        this.collapseBtnClass = 'el-icon-s-fold'\n        this.logoTextShow = true\n      }\n    },\n    getUser() {\n      let username = localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")).username : \"\"\n      if (username) {\n        // 从后台获取User数据\n        this.request.get(\"/user/username/\" + username).then(res => {\n          // 重新赋值后台的最新User数据\n          this.user = res.data\n        })\n      }\n    }\n  }\n}\n</script>\n\n<style>\n .el-menu {\n     width: 300px;\n   }\n   \n</style>\n\n"]}]}